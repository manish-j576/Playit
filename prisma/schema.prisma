// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  hashedpassword String?
  provider       Provider
  streams        Stream[]
  upvotes        Upvotes[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Stream {
  id          String     @id @default(uuid())
  type        StreamType
  url         String
  extractedID String //shot id in the youtube url or spotify url 
  title       String     @default("Error finding title")
  smallImgURL String     @default("") // you can put a default image here
  bigImgURL   String     @default("")
  active      Boolean    @default(true)
  upvote      Int        @default(0)
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  upvotes     Upvotes[]
}

model Upvotes {
  id       String @id @default(uuid())
  userId   String
  streamId String
  user     User   @relation(fields: [userId], references: [id])
  stream   Stream @relation(fields: [streamId], references: [id])

  @@unique([streamId, userId])
}

enum StreamType {
  Spotify
  Youtube
}

enum Provider {
  Google
  Credential
}
